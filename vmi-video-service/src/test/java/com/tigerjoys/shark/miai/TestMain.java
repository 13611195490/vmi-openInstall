package com.tigerjoys.shark.miai;

import java.util.Calendar;
import java.util.Date;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.shark.miai.common.util.AESFieldUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.tigerjoys.shark.miai.agent.IUserAgent;
import com.tigerjoys.shark.miai.agent.IUserChargeDataAgent;
import com.tigerjoys.shark.miai.agent.IUserCreditScoreAgent;
import com.tigerjoys.shark.miai.agent.dto.AreaDto;
import com.tigerjoys.shark.miai.agent.dto.transfer.UserModifyDto;
import com.tigerjoys.shark.miai.agent.service.IAppAreaService;
import com.tigerjoys.shark.miai.inter.contract.IAppAreaContract;
import com.tigerjoys.shark.miai.inter.contract.IBussinessMessageContract;
import com.tigerjoys.shark.miai.inter.contract.IUserBalanceAccountContract;
import com.tigerjoys.shark.miai.inter.contract.IUserContract;
import com.tigerjoys.shark.miai.service.IConfService;
import com.tigerjoys.shark.miai.service.IUserService;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({"classpath:/spring/applicationContext.xml"})
public class TestMain {
	
	private static final Logger logger = LoggerFactory.getLogger(TestMain.class);
	
	//@Autowired
	//@Qualifier(AgentRedisCacheConst.REDIS_USER_INFO_CACHE)
	//private CacheRedis userInfoCacheRedis;
	
	//@Autowired
	//private NeteaseAgent neteaseAgent;
	
	@Autowired
	private IUserContract userContract;
	
	@Autowired
	private IUserAgent userAgent;
	
	@Autowired
	private IAppAreaService appAreaService;
	
	@Autowired
	private IAppAreaContract appAreaContract;
	
	@Autowired
	private IConfService confService;
	
	@Autowired
	private IUserService userService;
	
	@Autowired
	private IUserBalanceAccountContract userBalanceAccountContract;
	
	@Autowired
	private IUserCreditScoreAgent userCreditScoreAgent;
	
	@Autowired
	private IBussinessMessageContract bussinessMessageContract;
	
	@Autowired
	private IUserChargeDataAgent userChargeDataAgent;
	
	/*public static void main(String[] args) throws Exception {
		System.err.println(AESFieldUtils.decrypt("8m5yr+M4/9jhg81/CW0s3Q=="));
	}*/
	
	@Test
	public void testArea() {
//		AreaDto areaDto = appAreaService.getCityByBaiduCode(131);
//		System.err.println(JsonHelper.toJson(areaDto));
//		areaDto = appAreaService.getCity(131);
//		System.err.println(JsonHelper.toJson(areaDto));
		
		Calendar cas = Calendar.getInstance(); 
		int hour = cas.get(Calendar.HOUR_OF_DAY);
		System.err.println(hour);
	}
	
	@Test
	public void testAAA() throws Exception {
		long[] ulong = new long[]{33697911852302592L,33751154343084288L,34113006432485632L,36085434706624768L,36753246716494080L,37192196186767616L,38054957747863808L,38255273185444096L,38801266782044416L,40437130658382080L,40786629698322688L,42227578345423104L,43184537638863104L,45012704670318848L,46751950152204544L,47223366635028736L,47306779467514112L,47466244418371840L,47471100241707264L,47574885888753920L,47911825666277632L,48165712727965952L,48994321298424064L,49877260351635712L,50528284471001344L,51859042785624320L,52077034867851520L,53763715027239168L,54543988063011072L,59657030104842496L,59995841219330304L,60161790346068224L,60293607346733312L,60348846378647808L,60661042151227648L,60815219697451264L,60841242025591040L,60875488314327296L,61037271280845056L,61221590924329216L,62017139527188736L,63841927870611712L,64710688532136192L};
		for(long userId : ulong) {
			UserModifyDto modifyDto = new UserModifyDto();
			modifyDto.setUserid(userId);
			userAgent.updateUser(modifyDto);
		}
		
		//List<AppointRecommendDto> dtoList = freeAppointBusinessService.randomCommendFreeAppoint(9);
		//System.err.println(JsonHelper.toJson(dtoList));
		//System.err.println(AESFieldUtils.encrypt("10000000001"));
		
		//paidAppointSolrService.deleteById(48191152403202048L);
		
		//paidAppointAgent.updateSolrGeoIndex(24995918191329536L, 116.359704d, 40.006879d);
		//Thread.sleep(10000L);
		//paidAppointAgent.updateSolrGeoIndex(48191152403202048L, 116.322505d, 39.98912d);
		//userChargeDataAgent.changeChargeAmount(10001L, 100, UserChargeDataLogTypeEnum.charge_diamond, "充值钻石");
		//27164645122965760L
		//33154767402369280L
		
		//meetStrangerService.updateUserStickTime(33154767402369280L, System.currentTimeMillis());
		//meetStrangerService.updateUserStickTime(27164645122965760L, System.currentTimeMillis());
		
		/*UserModifyDto dto = new UserModifyDto();
		dto.setUserid(33549228554912000L);
		dto.setClientid("c24d12c5e18b43d1897bbfa32d8b9db1");
		
		userAgent.updateUser(dto);*/
		
		/*List<BussinessMessageEntity> list = bussinessMessageContract.loadByUseridAndType(Lists.newArrayList(1,2,3), 23518171310915840L);
		System.err.println(JsonHelper.toJson(list));
		System.err.println("==============");*/
		
		//UserBO user = userAgent.findById(33157044051706112L);
		//System.err.println(JsonHelper.toJson(user));
		
		/*ActionResult result = confService.syncAppointType(0);
		
		SyncAppointTypeVO vo = (SyncAppointTypeVO)result.getData();
		System.err.println(JsonHelper.toJson(vo.getAppointBudgetList()));*/
		
		//paidAppointAgent.checkSellerCreditAndPaidAppoint(25381978738065664L);
		
		//paidAppointAgent.buildAllSolrIndex();
		//userAgent.buildAllSolrIndex();
		
		/*PaidAppointSolrQueryDto solrQuery = new PaidAppointSolrQueryDto();
		solrQuery.setEndAge(null);
		solrQuery.setOrderBy(0);
		solrQuery.setPage(1);
		solrQuery.setPageSize(2);

		List<PaidAppointEntity> list = paidAppointAgent.searchSolrList(solrQuery);
		
		if(Tools.isNotNull(list)) {
			for(PaidAppointEntity paid : list) {
				System.err.println(JsonHelper.toJson(paid));
			}
		}*/
		
		/*MeetStrangerSolrQueryDto query = new MeetStrangerSolrQueryDto();
		query.setOrderBy(0);
		query.setGender(0);
		query.setStamp("");
		
		ActionResult result = meetStrangerService.showUserInfo(query);
		
		Map<String,Object> dataMap = (Map<String,Object>)result.getData();
		
		List<MeetStrangerListVO> list = (List<MeetStrangerListVO>)dataMap.get("userInfo");
		
		for(int i=1;i<=46;i++) {
			UserModifyDto dto = new UserModifyDto();
			dto.setUserid(list.get(i-1).getUserid());
			dto.setPhoto("/test/"+i+".jpg");
			
			userAgent.updateUser(dto);
		}*/
		
		
		//userCreditScoreAgent.changeCreditScore(24977576409760000L, true, 100, String.valueOf(System.currentTimeMillis()), UserCreditRecordEnum.purchaseAdd.getCode(), UserCreditRecordEnum.purchaseAdd.getDesc());
		
		//Thread.sleep(Long.MAX_VALUE);
		/*UserBalanceAccountEntity ss = userBalanceAccountContract.findById(3);
		ss.setUserid(Long.MAX_VALUE);
		userBalanceAccountContract.update(ss);*/
		
		
		//System.err.println(JsonHelper.toJson(userBalanceAccountContract.findById(3)));
		
		/*UserBO user = userAgent.findById(19760775761559808L);
		
		BeatContext beat = new BeatContext();
		beat.setUser(user);
		
		RequestUtils.bindBeatContextToCurrentThread(beat);
		paidAppointBusinessService.getOrderList(0, 0, 10);*/
		
		//ActionResult result = userService.authSendCode("15603379528");
		//System.err.println(JsonHelper.toJson(result));
		
		//long cc = cloudStorage.getBucketUsage();
		//System.err.println(cc);
		
		/*List<AppAreaEntity> list = new ArrayList<>();
		
		PageModel pageModel = PageModel.getPageModel();
		pageModel.addQuery(Restrictions.eq("status", 1));
		pageModel.addQuery(Restrictions.eq("pid", IAppAreaService.CHINA_ID));
		pageModel.desc("priority");
		pageModel.asc("id");
		
		//获取所有的省份
		List<AppAreaEntity> proviceList = appAreaContract.load(pageModel);
		for(AppAreaEntity provice : proviceList) {
			list.add(provice);
			
			pageModel.clearAll();
			
			pageModel.addQuery(Restrictions.eq("status", 1));
			pageModel.addQuery(Restrictions.eq("pid", provice.getId()));
			pageModel.desc("priority");
			pageModel.asc("id");
			
			List<AppAreaEntity> areaList = appAreaContract.load(pageModel);
			if(Tools.isNotNull(areaList)) {
				list.addAll(areaList);
			}
		}
		
		FileOutputStream fos = new FileOutputStream("E:/city.json");
		PrintStream bos = new PrintStream(fos);
		
		bos.print(JsonHelper.toJson(list));
		
		bos.flush();
		bos.close();
		fos.close();*/
		
		//PageModel pageModel = PageModel.getPageModel();
		//pageModel.addProjection(Projections.sum("sex").as("aa"));
		//pageModel.addProjection(Projections.groupProperty("aa"));
		//List<Map<String, Object>> mm = userContract.loadGroupBy(pageModel);
		//System.out.println(JsonHelper.toJson(mm));
		
		/*List<AreaDto> areaList = appAreaService.getChinaCityList();
		for(AreaDto a : areaList) {
			a.setCitycode(null);
			a.setDepth(null);
			a.setHot(null);
			a.setId(null);
			a.setIszhi(null);
			a.setLat(null);
			a.setLng(null);
			a.setPid(null);
		}
		
		System.err.println(areaList.size());
		
		FileOutputStream fos = new FileOutputStream("E:/city.json");
		PrintStream bos = new PrintStream(fos);
		
		bos.print(JsonHelper.toJson(areaList));
		
		bos.flush();
		bos.close();
		fos.close();*/
		
		//paidAppointSolrService.deleteAllIndex();
		
		/*long cc = System.currentTimeMillis();
		for(int i=0;i<100;i++) {
			long xx = UniqueIDUtils.getUniqueID();
			Date date = new Date(cc - Tools.HOUR_MILLIS*new Random().nextInt(100));
			
			PaidAppointEntity appoint = new PaidAppointEntity();
			appoint.setAudit_adminid(0L);
			appoint.setCityid(0L);
			appoint.setCountryid(IAppAreaService.CHINA_ID);
			appoint.setCreate_time(date);
			appoint.setDescription("我就是喜欢你");
			appoint.setDrink(1);
			appoint.setLat(39.989245d);
			appoint.setLng(116.323996d);
			appoint.setPrice(10900);
			appoint.setProvinceid(IAppAreaService.BEIJING_ID);
			appoint.setStart_hours(3);
			appoint.setStatus(PaidAppointStatusEnum.online.getCode());
			appoint.setTitle("你是我的以为");
			appoint.setTypes(",1,");
			appoint.setUpdate_time(date);
			appoint.setUserid(10001L);
			
			paidAppointAgent.insert(appoint);
			
			System.err.println(xx+"--"+appoint.getId());
		}*/
		
		/*double lat = 39.989362d , lng = 116.321836d;
		//查询
		PaidAppointSolrQueryDto query = new PaidAppointSolrQueryDto();
		query.setDist(190);
		query.setLat(39.989362d);
		query.setLng(116.321836d);
		query.setStartAge(20);
		query.setEndAge(35);
		query.setPage(1);
		query.setPageSize(5);
		
		List<PaidAppointEntity> list = paidAppointAgent.searchSolrList(query);
		if(Tools.isNotNull(list)) {
			for(PaidAppointEntity appoint : list) {
				logger.info("相差距离：" + DistanceUtils.getDistance(lng, lat, appoint.getLng(), appoint.getLat()));
				logger.info(JsonHelper.toJson(appoint));
			}
		}
		System.err.println("===========finished=================");*/
		
		/*List<AreaDto> list = appAreaService.getProvinceList();
		for(AreaDto area : list) {
			System.err.println(JsonHelper.toJson(area));
		}*/
		
		/*List<Long> userIds = new ArrayList<Long>(){
			{
				add(10001L);
				add(10002L);
				add(10003L);
				add(18888L);
			}
		};
		Map<Long,UserBO> map = userAgent.findById(userIds);
		for(Map.Entry<Long, UserBO> me : map.entrySet()) {
			System.err.println(JsonHelper.toJson(me.getValue()));
		}*/
		
		/*MMM mm = new MMM();
		mm.setAa("aaaa");
		mm.setBb("bbbb");
		
		//Map<String , String> ab = new HashMap<>();
		mm.setMap(new HashMap<String , String>(){
			{
				put("a" , "aaa");
				put("b" , "bbb");
			}
		});
		//mm.setMap(ab);
		
		serailze(mm);*/
		
		//测试一下
		//UserExtensionEntity ue = userExtensionContract.findByProperty("userid", 10001L);
		//System.out.println(ue.getParamJson().get("aaa"));
		
		//UserBO user = userAgent.findById(3111430071058688L);
		
		/*long[] ss = new long[]{1468551563247872L,1468554704781568L,1468555952587008L,1468557215072512L,1468558397866240L,1468559679226112L,1468560870408448L,1468562080465152L,1468563284230400L,1468564475412736L,1468565647720704L,1468566924886272L,1468567986045184L,1468568688591104L,1468569846219008L,1468570989166848L,1468572180349184L,1468573285548288L,1468574459953408L,1468575617581312L,1468576810860800L,1468577987363072L,1468578614411520L,1468579335831808L,1468580518625536L,1468581697224960L,1468582842269952L,1468584058618112L,1468585113485568L,1468586296279296L,1468587451810048L,1468588598952192L,1468589823688960L,1468591010676992L,1468592195567872L,1468592931668224L,1468594219319552L,1468595332907264L,1468596452786432L,1468597497168128L,1468598608658688L,1468599776772352L,1468600840028416L,1468601953616128L,1468603134312704L,1468604266774784L,1468605342613760L,1468606475075840L,1468607599149312L,1468608777748736L,1468609939570944L,1468611042672896L,1468611793453312L,1468612829446400L,1468613653627136L,1468614968541440L,1468616092614912L,1468617248145664L,1468618420453632L,1468619454349568L,1468620519702784L,1468621689913600L,1468622767849728L,1468623803842816L,1468624927916288L,1468626184110336L,1468627366904064L,1468628551794944L,1468629619245312L,1468630644752640L,1468631722688768L,1468632760779008L,1468633436061952L,1468634537066752L,1468635621294336L,1468636747464960L,1468637896704256L,1468638997709056L,1468640086130944L,1468641283604736L,1468642334277888L,1468643487711488L,1468644599202048L,1468645712789760L,1468646836863232L,1468647927382272L,1468649038872832L,1468650194403584L,1468651345740032L,1468652530630912L,1468653767950592L,1468654831206656L,1468656034971904L,1468657129685248L,1468658272633088L,1468659440746752L,1468660508197120L,1468661233811712L,1468662276096256L,1468663406461184L,1468664534728960L,1468665675579648L,1468666745127168L,1468667988738304L,1468668705964288L,1468669779706112L,1468671031705856L,1468672220791040L,1468673470693632L,1468674624127232L,1468675762880768L,1468676853399808L,1468678013124864L,1468679126712576L,1468680290631936L,1468681376956672L,1468682601693440L,1468683897733376L,1468685002932480L,1468686085062912L,1468687202844928L,1468688278683904L,1468689432117504L,1468690531025152L,1468691594281216L,1468692668023040L,1468693815165184L,1468694825992448L,1468695866179840L,1468696587600128L,1468697665536256L,1468698709917952L,1468699884323072L,1468701037756672L,1468702149247232L,1468703267029248L,1468704424657152L,1468705565507840L,1468706611986688L,1468707788488960L,1468708851745024L,1468709954846976L,1468711114572032L,1468712261714176L,1468713379496192L,1468714593747200L,1468715696849152L,1468716818825472L,1468717955481856L,1468719039709440L,1468720262349056L,1468721296244992L,1468722497913088L,1468723680706816L,1468724848820480L,1468725861744896L,1468726891446528L,1468727965188352L,1468729041027328L,1468730190266624L,1468731264008448L,1468732341944576L,1468733428269312L,1468734510399744L,1468735699484928L,1468736785809664L,1468738088141056L,1468739216408832L,1468740325802240L,1468741349212416L,1468742427148544L,1468743572193536L,1468744719335680L,1468745421881600L,1468746439000320L,1468747646959872L,1468748288688384L,1468749343555840L,1468750480212224L,1468751642034432L,1468752866771200L,1468753938415872L,1468755070877952L,1468756211728640L,1468757216264448L,1468758357115136L,1468759521034496L,1468760601067776L,1468761744015616L,1468762817757440L,1468764080242944L,1468766651351296L,1468767949488384L,1468769163739392L,1468770226995456L,1468771443343616L,1468772544348416L,1468773716656384L,1469153162756352L,1469156780343552L,1469157696798976L,1469158820872448L,1469160035123456L,1469160687337728L,1469161501032704L,1469162639786240L,1469163801608448L,1469165068288256L,1469165754056960L,1469166955725056L,1469168218210560L,1469169390518528L,1469170506203392L,1469171586236672L,1469172758544640L,1469173471576320L,1469174666952960L,1469175795220736L,1469177013666048L,1469178120962304L,1469179192606976L,1469179930804480L,1469180970991872L,1469182181048576L,1469183384813824L,1469184234160384L,1469185326776576L,1469186392129792L,1469187545563392L,1469188325703936L,1469189349114112L,1469189971968256L,1469191102333184L,1469192377401600L,1469193411297536L,1469194560536832L,1469195577655552L,1469196697534720L,1469197836288256L,1469198970847488L,1469200036200704L,1469201170759936L,1469202340970752L,1469203462947072L,1469204670906624L,1469205828534528L,1469207017619712L,1469208194121984L,1469209358041344L,1469210142376192L,1469211190952192L,1469212287762688L,1469213353115904L,1469214464606464L,1469215494308096L,1469216635158784L,1469217719386368L,1469218893791488L,1469220267426048L,1469221313904896L,1469222475727104L,1469223566246144L,1469224604336384L,1469225669689600L,1469226808443136L,1469227924128000L,1469229006258432L,1469230023377152L,1469231132770560L,1469232252649728L,1469233324294400L,1469234490310912L,1469235561955584L,1469236583268608L,1469237766062336L,1469238850289920L,1469240012112128L,1469241020842240L,1469242136527104L,1469243162034432L,1469244284010752L,1469245420667136L,1469246496506112L,1469247652036864L,1469248801276160L,1469249879212288L,1469250973925632L,1469252125262080L,1469253224169728L,1469254333563136L,1469255421985024L,1469256491532544L,1469257603023104L,1469258316054784L,1469259467391232L,1469260551618816L,1469261642137856L,1469262770405632L,1469263969976576L,1469265039524096L,1469266293620992L,1469268036354304L,1469271112876288L,1469272262115584L,1469273302302976L,1469273887408384L,1469275179254016L,1469276318007552L,1469277404332288L,1469278549377280L,1469279692325120L,1469280877216000L,1469282015969536L,1469283131654400L,1469284245242112L,1469285084102912L,1469286206079232L,1469287225295104L,1469288408088832L,1469289418916096L,1469290591224064L,1469291669160192L,1469292759679232L,1469293825032448L,1469294980563200L,1469296150774016L,1469297302110464L,1469298375852288L,1469299455885568L,1469300493975808L,1469301553037568L,1469302154920192L,1469303251730688L,1469303968956672L,1469304992366848L,1469306173063424L,1469307223736576L,1469307995488512L,1469309077618944L,1469310168137984L,1469310864392448L,1469311527092480L,1469312529531136L,1469313739587840L,1469314976907520L,1469316052746496L,1469317189402880L,1469318302990592L,1469319393509632L,1469320540651776L,1469321647948032L,1469322805575936L,1469323896094976L,1469324980322560L,1469326039384320L,1469327129903360L,1469328283336960L,1469329369661696L,1469330487443712L,1469331789775104L,1469332951597312L,1469334054699264L,1469335161995520L,1469336277680384L,1469337374490880L,1469338506952960L,1469339570209024L,1469340732031232L,1469341805773056L,1469342952915200L,1469344087474432L,1469345180090624L,1469346325135616L,1469347359031552L,1469348371955968L,1469349552652544L,1469350685114624L,1469351832256768L,1469352914387200L,1469353556115712L,1469354736812288L,1469355776999680L,1469356861227264L,1469357981106432L,1469358664777984L,1469359264563456L,1469360380248320L,1469361500127488L,1469362554994944L,1469363721011456L,1469364524220672L,1469365581185280L,1469366740910336L,1469367881761024L,1469368965988608L,1469370113130752L,1469371262370048L,1469372348694784L,1469373378396416L,1469374420680960L,1469375481839872L,1469376628982016L,1469377709015296L,1469378751299840L,1469380005396736L,1469381192384768L,1469382175949056L,1469383211942144L,1469384310849792L,1469385353134336L,1469386460430592L,1469387653710080L,1469388790366464L,1469389799096576L,1469390898004224L,1469391967551744L,1469392999350528L,1469394056315136L,1469395482378496L,1469396537245952L,1469397690679552L,1469398783295744L,1469399951409408L,1469401117425920L,1469402231013632L,1469403252326656L,1469404307194112L,1469405359964416L,1469406416929024L,1469407469699328L,1469408484720896L,1469409518616832L,1469410680439040L,1469411355721984L,1469412427366656L,1469413543051520L,1469414688096512L,1469415839432960L,1469416925757696L,1469418047734016L,1469421216530688L,1469422353187072L,1469423475163392L,1469424603431168L,1469425603772672L,1469426742526208L,1469427507986688L,1469428535591168L,1469429663858944L,1469430664200448L,1469431668736256L,1469432767643904L,1469433927368960L,1469435061928192L,1469435867234560L,1469436949364992L,1469437997940992L,1469439050711296L,1469440095092992L,1469441152057600L,1469442255159552L,1469443316318464L,1469444490723584L,1469445572854016L,1469446665470208L,1469447846166784L,1469448991211776L,1469450169811200L,1469451243553024L,1469451933516032L,1469452480872704L,1469453481214208L,1469454596899072L,1469455284764928L,1469456379478272L,1469456989749504L,1469457717461248L,1469458797494528L,1469459833487616L,1469460921909504L,1469461976776960L,1469463025352960L,1469464067637504L,1469465122504960L,1469466328367360L,1469467454537984L,1469468480045312L,1469469633478912L,1469470669472000L,1469471776768256L,1469472804372736L,1469473896988928L,1469475088171264L,1469476182884608L,1469477346803968L,1469478118555904L,1469479278280960L,1469481176203520L,1469482356900096L,1469483520819456L,1469484575686912L,1469485609582848L,1469486804959488L,1469487905964288L,1469489055203584L,1469490204442880L,1469491320127744L,1469492347732224L,1469493392113920L,1469494499410176L,1469495604609280L,1469496586076416L,1469497626263808L,1469499494826240L,1469500560179456L,1469501787013376L,1469502443421952L,1469503573786880L,1469504731414784L,1469506008580352L,1469507124265216L,1469508200104192L,1469508927815936L,1469509982683392L,1469510974636288L,1469512084029696L,1469513170354432L,1469514307010816L,1469515376558336L,1469516087492864L,1469517096222976L,1469518224490752L,1469519333884160L,1469520453763328L,1469522041307392L,1469523066814720L,1469524107002112L,1469525170258176L,1469526319497472L,1469527468736768L,1469528605393152L,1469529677037824L,1469530773848320L,1469531933573376L,1469533099589888L,1469534303355136L,1469535542771968L,1469536591347968L,1469537799307520L,1469538933866752L,1469539959374080L,1469541043601664L,1469542251561216L,1469543314817280L,1469544426307840L,1469545546187008L,1469546594763008L,1469547676893440L,1469548729663744L,1469549753073920L,1469550841495808L,1469551906849024L,1469553053991168L,1469554127732992L,1469555138560256L,1469556245856512L,1469557351055616L,1469558485614848L,1469559540482304L,1469560603738368L,1469561757171968L,1469562830913792L,1469563856421120L,1469565028729088L,1469566234591488L,1469567333499136L,1469568449184000L,1469569541800192L,1469570164654336L,1469571112567040L,1469572245029120L,1469572920312064L,1469574065357056L,1469575118127360L,1469576298823936L,1469577464840448L,1469578477764864L,1469579675238656L,1469580698648832L,1469581738836224L,1469582808383744L,1469583984886016L,1469585071210752L,1469586197381376L,1469587275317504L,1469588409876736L,1469589498298624L,1469590261661952L,1469591285072128L,1469592476254464L,1469593547899136L,1469594613252352L,1469595737325824L,1469596880273664L,1469597968695552L,1469599136809216L,1469600344768768L,1469601395441920L,1469602567749888L,1469603190604032L,1469604239180032L,1469605375836416L,1469606386663680L,1469607487668480L,1469608611741952L,1469609748398336L,1469610824237312L,1469611937825024L,1469613076578560L,1469614202749184L,1469615320531200L,1469616482353408L,1469617631592704L,1469618694848768L,1469619898614016L,1469621035270400L,1469622136275200L,1469623260348672L,1469624315216128L,1469625460261120L,1469626452214016L,1469627530150144L,1469628580823296L,1469629631496448L,1469630732501248L,1469631441338624L,1469632104038656L,1469632817070336L,1469633439924480L,1469634060681472L,1469635050537216L,1469636084433152L,1469637225283840L,1469637848137984L,1469638596821248L,1469639722991872L,1469640897396992L,1469641958555904L,1469643124572416L,1469644206702848L,1469645347553536L,1469646033322240L,1469647553757440L,1469648648470784L,1469649382473984L,1469650061951232L,1469651177636096L,1469652247183616L,1469653352382720L,1469654520496384L,1469655640375552L,1469656630231296L,1469657794150656L,1469658437976320L,1469659620770048L,1469660757426432L,1469661923442944L,1469663020253440L,1469664142229760L,1469665270497536L,1469666346336512L,1469667290054912L,1469667925491968L,1469668978262272L,1469670075072768L,1469671115260160L,1469672216264960L,1469672906227968L,1469674044981504L,1469675122917632L,1469676209242368L,1469677341704448L,1469678493040896L,1469679621308672L,1469680711827712L,1469681873649920L,1469682892865792L,1469684019036416L,1469685029863680L,1469686281863424L,1469687288496384L,1469688473387264L,1469689521963264L,1469690566344960L,1469691612823808L,1469692692857088L,1469693703684352L,1469694764843264L,1469695853265152L,1469696885063936L,1469698044788992L,1469699120627968L,1469700246798592L,1469701316346112L,1469702398476544L,1469703512064256L,1469704638234880L,1469705785377024L,1469706894770432L,1469707618287872L,1469708637503744L,1469709757382912L,1469710940176640L,1469711990849792L,1469713125409024L,1469714222219520L,1469715245629696L,1469716436812032L,1469717479096576L,1469718504603904L,1469719683203328L,1469720329126144L,1469721375604992L,1469722514358528L,1469723588100352L,1469724718465280L,1469725802692864L,1469726832394496L,1469727931302144L,1469729116193024L,1469730261238016L,1469731431448832L,1469732521967872L,1469733589418240L,1469734765920512L,1469735822885120L,1469736921792768L,1469738075226368L,1469739142676736L,1469740266750208L,1469741361463552L,1469741967540480L,1469743030796544L,1469744129704192L,1469745174085888L,1469746153455872L,1469747157991680L,1469748336591104L,1469749380972800L,1469750530212096L,1469751689937152L,1469752826593536L,1469753931792640L,1469755030700288L,1469756165259520L,1469757215932672L,1469758340006144L,1469759413747968L,1469760596541696L,1469761649312000L,1469762752413952L,1469763926819072L,1469765080252672L,1469765709398272L,1469766688768256L,1469767844299008L,1469768911749376L,1469769951936768L,1469771027775744L,1469772093128960L,1469773871513856L,1469774588739840L,1469775293382912L,1469776333570304L,1469777487003904L,1469778539774208L,1469779733053696L,1469780861321472L,1469782025240832L,1469783182868736L,1469784332108032L,1469785506513152L,1469786555089152L,1469787639316736L,1469788606103808L,1469789707108608L,1469790772461824L,1469792137707776L,1469793177895168L,1469794285191424L,1469795293921536L,1469795971301632L,1469797116346624L,1469798175408384L,1469799223984384L,1469800257880320L,1469801472131328L,1469802497638656L,1469803554603264L,1469804705939712L,1469805823721728L,1469806895366400L,1469807952331008L,1469809124638976L,1469810292752640L,1469811406340352L,1469812534608128L,1469813224571136L,1469813893562624L,1469814539485440L,1469815239934208L,1469815860691200L,1469816628248832L,1469817746030848L,1469818830258432L,1469819467792640L,1469820447162624L,1469821023879424L,1469821646733568L,1469822695309568L,1469823769051392L,1469824341573888L,1469825023148288L,1469826040267008L,1469826753298688L,1469827485204736L,1469828590403840L,1469829651562752L,1469830700138752L,1469831656440064L,1469832795193600L,1469833889906944L,1469834946871552L,1469836081430784L,1469837138395392L,1469837692043520L,1469838413463808L,1469839587868928L,1469840638542080L,1469841703895296L,1469842859426048L,1469843882836224L,1469844979646720L,1469846059680000L,1469847141810432L,1469848314118400L,1469848930681088L,1469850092503296L,1469851191410944L,1469852355330304L,1469853385031936L,1469854450385152L,1469855517835520L,1469856576897280L,1469857621278976L,1469858655174912L,1469859697459456L,1469860850893056L,1469861956092160L,1469863015153920L,1469864105672960L,1469865166831872L,1469866127327488L,1469867083628800L,1469868172050688L,1469869252083968L,1469869931561216L,1469871093383424L,1469871751889152L,1469872775299328L,1469873819681024L,1469874509644032L,1469875663077632L,1469876715847936L,1469877397422336L,1469878133522688L,1469879182098688L,1469880278909184L,1469881296027904L,1469882445267200L,1469883514814720L,1469884246720768L,1469885351919872L,1469886616502528L,1469887646204160L,1469888734626048L,1469889760133376L,1469890783543552L,1469891832119552L,1469892918444288L,1469893541298432L,1469894206095616L,1469895344849152L,1469896466825472L,1469897582510336L,1469898268279040L,1469899876794624L,1469900533203200L,1469901135085824L,1469901783105792L,1469902429028608L,1469903473410304L,1469904169664768L,1469904769450240L,1469905933369600L,1469906593972480L,1469907221020928L,1469907829195008L,1469908554809600L,1469909110554880L,1469910190588160L,1469911310467328L,1469912291934464L,1469913363579136L,1469914449903872L,1469915112603904L,1469915748040960L,1469916802908416L,1469917843095808L,1469918946197760L,1469919963316480L,1469921171276032L,1469922310029568L,1469923497017600L,1469924503650560L,1469925311054080L,1469926414156032L,1469927603241216L,1469928309981440L,1469929360654592L,1469930428104960L,1469931524915456L,1469932139380992L,1469933280231680L,1469934435762432L,1469935522087168L,1469936235118848L,1469936874750208L,1469937545838848L,1469938581831936L,1469939668156672L,1469940712538368L,1469941266186496L,1469942386065664L,1469943388504320L,1469944455954688L,1469945525502208L,1469946693615872L,1469947775746304L,1469948434252032L,1469949484925184L,1469950590124288L,1469951649186048L,1469952722927872L,1469953863778560L,1469954962686208L,1469956051108096L,1469957164695808L,1469958238437632L,1469959335248128L,1469960352366848L,1469961463857408L,1469962577445120L,1469963550523648L,1469964718637312L,1469965802864896L,1469966362804480L,1469967426060544L,1469968569008384L,1469969649041664L,1469970752143616L,1469971878314240L,1469972941570304L,1469974063546624L,1469975139385600L,1469976198447360L,1469977247023360L,1469977970540800L,1469978985562368L,1469980086567168L,1469981105783040L,1469982160650496L,1469983307792640L,1469984377340160L,1469985388167424L,1469986474492160L,1469987611148544L,1469988638753024L,1469989660066048L,1469990700253440L,1469991738343680L,1469992854028544L,1469993902604544L,1469994963763456L,1469996081545472L,1469997230784768L,1469998350663936L};
		
		for(long userid : ss) {
			UserBO user = userAgent.findById(userid);
			
			System.err.println(Const.getCdn(user.getPhoto()));
			
			//更新网易头像
			List<NameValuePair> nvps = new ArrayList<NameValuePair>();
			nvps.add(new BasicNameValuePair("accid", String.valueOf(userid)));
			nvps.add(new BasicNameValuePair("icon", Const.getCdn(Helper.getPrefixFile(user.getPhoto(), "_s"))));
			neteaseAgent.updateUser(nvps);
		}*/
		
		/*PageModel pageModel = PageModel.getPageModel();
		pageModel.addQuery(Restrictions.eq("fr", UserFrEnum.robot.getCode()));
		pageModel.addQuery(Restrictions.eq("sex", 1));
		
		List<UserEntity> nanList = userContract.load(pageModel);
		
		System.err.println("总计需要下载：" + nanList.size());
		
		initDown(nanList.size());
		
		System.err.println("实际资源总计：" + imageList.size());
		
		//此处正式的下载文件
		for(UserEntity user : nanList) {
			try {
				String path = "E:/aa/"+user.getPhoto();
				String url = null;
				boolean b = false;
				
				while(!b) {
					url = imageList.pop();
					System.err.println("本次获取图片地址：" + url + " , 本次保存地址：" + path);
					b = HttpUtils.downloadFile(url, path);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
		}*/
		
		/*PageModel pageModel = PageModel.getPageModel();
		pageModel.addQuery(Restrictions.eq("fr", UserFrEnum.robot.getCode()));
		pageModel.addQuery(Restrictions.eq("sex", 2));
		
		List<UserEntity> nanList = userContract.load(pageModel);
		
		for(UserEntity user : nanList) {
			try {
				String path = "E:/aa/"+user.getPhoto();
				
				ImageUtil.resizeImage(path, "s", 100, 100);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}*/
	}
	
	/*private void initDown(int count) throws HttpException, IOException {
		count += 100;
		
		int pageSize = 48;
		int totalPage = ((count-1)/48)+1;
		
		for(int i=0;i<totalPage;i++) {
			int start = i*pageSize;
			
			ResponseStatus json = HttpUtils.get("http://pic.sogou.com/pics?query=%C4%D0%C9%FA+%CD%B7%CF%F1&mode=1&st=0&dm=4&leftp=44230501&cwidth=400&cheight=400&start="+start+"&reqType=ajax&reqFrom=result&tn=0");
			//String json = HttpClientUtils.doGet("http://pic.sogou.com/pics?query=%C5%AE%C9%FA+%CD%B7%CF%F1&mode=1&st=0&dm=4&leftp=44230501&cwidth=400&cheight=400&start="+start+"&reqType=ajax&reqFrom=result&tn=0", null);
			JSONObject o = json.getJsonObjectContent();
			JSONArray item = o.getJSONArray("items");
			
			for(int j=0,size=item.size();j<size;j++) {
				String pic = item.getJSONObject(j).getString("pic_url_noredirect");
				System.err.println(pic);
				
				imageList.add(pic);
			}
		}
	}*/

	@Test
	public void testCity() throws Exception {
		AreaDto[] dtos = appAreaService.getAreas(131);
		AreaDto dto = appAreaService.getCity(4146);
		int i = 0;
		i++;
	}
	
	@Test
	public void testTime() {
		long time = new Date().getTime();
		System.err.println("time="+time);
	}
	
	//手机号
	@Test
	public void testMobileTime() throws Exception{
		System.out.println(AESFieldUtils.decrypt("sU5WXimUy5tS+yHZqsspUw=="));
	}
	
}
